{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","hoc/Auxx/Auxiliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredients/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","shared/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","activeClassName","active","to","link","exact","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","connect","auth","token","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","transformedIngredients","Object","keys","ingredients","map","ingredientKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","igKey","textTransform","purchaseCancelled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponenet","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","authSuccess","userId","idToken","checkAuthTimeout","expirationTime","dispatch","setTimeout","logout","localStorage","removeItem","setAuthRedirectPath","path","payload","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disableInfo","ings","orderSummary","loading","Spinner","onIngAdded","onIngRemoved","updatePurchaseState","burgerBuilder","totalPrice","ingName","ingredientName","get","then","data","catch","actions","checkoutSummary","CheckoutSummary","width","margin","checkoutCanceled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderFrom","name","placeholder","validation","required","valid","street","zipcode","minLength","maxLength","country","email","deliveryMethod","address","postalCode","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","Checkout","checkoutCanceledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","orders","queryParams","fetchedOrders","err","Auth","isEmail","password","isSignup","switchAuthModeHandler","controlName","updatedControls","submitHandler","onAuth","buildingBurger","authRedirectPath","test","errorMessage","authRedirect","building","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","Logout","onLogout","App","onTryAutoSignup","routes","Auxiliary","getItem","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","action","updatedIngredient","updatedState","removeIngredient","updatedIng","updatedSt","setIngredients","fetchIngredients","reducer","purchaseInit","purchaseBurgerStart","newOrder","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","authStart","authFail","authLogout","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.d620d432.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2ZrdY\",\"BreadTop\":\"BurgerIngredient_BreadTop__y5bBn\",\"Seeds1\":\"BurgerIngredient_Seeds1__2lYxX\",\"Seeds2\":\"BurgerIngredient_Seeds2__3i9iT\",\"Meat\":\"BurgerIngredient_Meat__3fhXu\",\"Cheese\":\"BurgerIngredient_Cheese__o4Pj_\",\"Salad\":\"BurgerIngredient_Salad__3RGDu\",\"Bacon\":\"BurgerIngredient_Bacon__2_1n7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1xp2C\",\"Open\":\"SideDrawer_Open__247Bl\",\"Close\":\"SideDrawer_Close__1POb_\",\"Logo\":\"SideDrawer_Logo__1oXPF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__32mCa\",\"Label\":\"BuildControl_Label__2BgZj\",\"Less\":\"BuildControl_Less__10_kP\",\"More\":\"BuildControl_More__2-t51\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2yB5D\",\"Label\":\"Input_Label__QVVyS\",\"InputElement\":\"Input_InputElement__3y3ta\",\"Invalid\":\"Input_Invalid__3eASI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__qk57K\",\"Logo\":\"Toolbar_Logo__3PpQ8\",\"DesktopOnly\":\"Toolbar_DesktopOnly__12BHb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2vG0h\",\"active\":\"NavigationItem_active__1taXJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1ytGi\",\"OrderButton\":\"BuildControls_OrderButton__X-ct6\",\"enable\":\"BuildControls_enable__3OeJs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1_2YR\",\"Success\":\"Button_Success__1eSnX\",\"Danger\":\"Button_Danger__1blPa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__29RX3\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2NYio\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__19vxU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3tNvd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__36Gvd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__2_4XO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3bfeU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1BqCM\",\"load7\":\"Spinner_load7__1NRB6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__aNR9F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__YBsIO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__NQhaT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__38ucS\"};","const aux = (props) => props.children;\r\n\r\nexport default aux;\r\n","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png'\r\nimport classes from './Logo.module.css'\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{height: props.height}}>\r\n        <img src={burgerLogo} alt='FannyBurger'/>\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from \"react\";\r\nimport classes from \"./NavigationItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst navigationItem = (props) => {\r\n  return (\r\n    <li className={classes.NavigationItem}>\r\n      <NavLink activeClassName={classes.active} to={props.link} exact={props.exact}>\r\n        {props.children}\r\n      </NavLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default navigationItem;\r\n","import React from \"react\";\r\nimport classes from \"./NavigationItems.module.css\";\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\r\n\r\nconst navigationItems = (props) => (\r\n  <ul className={classes.NavigationItems}>\r\n    <NavigationItem link=\"/\" exact>\r\n      Burger Builder\r\n    </NavigationItem>\r\n    {props.isAuthenticated ? (\r\n      <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n    ) : null}\r\n    {!props.isAuthenticated ? (\r\n      <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\r\n    ) : (\r\n      <NavigationItem link=\"/logout\">Logout</NavigationItem>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nexport default navigationItems;\r\n","import React from 'react';\r\nimport classes from './DrawerToggle.module.css'\r\n\r\n\r\nconst drawerToggle = (props) => {\r\n    return(\r\n        <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css'\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle'\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n        {/* <div onClick={props.closed}>MENU</div> */}\r\n        <div className={classes.Logo}>\r\n        <Logo height='80%'/>\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth}/>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.module.css'\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems.js'\r\nimport classes from './SideDrawer.module.css'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\nimport Aux from '../../../hoc/Auxx/Auxiliary'\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close]\r\n    if(props.open){\r\n        attachedClasses = [classes.SideDrawer, classes.Open]\r\n    }\r\n    return(\r\n        <Aux>\r\n        <Backdrop show={props.open} clicked={props.closed}/> \r\n        <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n            <div className={classes.Logo}>\r\n            <Logo clicked={props.closed}/>\r\n            </div>\r\n            <nav>\r\n                <NavigationItems isAuthenticated={props.isAuth}/>\r\n            </nav>\r\n        </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Aux from \"../Auxx/Auxiliary\";\r\nimport classes from \"./Layout.module.css\";\r\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\r\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    showSideDrawer: false,\r\n  };\r\n\r\n  sideDrawerClosedHandler = () => {\r\n    this.setState({ showSideDrawer: false });\r\n  };\r\n\r\n  sideDrawerToggleHandler = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        showSideDrawer: !prevState.showSideDrawer,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <Toolbar\r\n          isAuth={this.props.isAuthenticated}\r\n          drawerToggleClicked={this.sideDrawerToggleHandler}\r\n        />\r\n        <SideDrawer\r\n          isAuth={this.props.isAuthenticated}\r\n          closed={this.sideDrawerClosedHandler}\r\n          open={this.state.showSideDrawer}\r\n        />\r\n        <main className={classes.Content}>{this.props.children}</main>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React, { Component } from 'react';\r\nimport classes from './BurgerIngredient.module.css';\r\nimport propTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component {\r\n\r\n    render(){\r\n        let ingredient = null;\r\n\r\n        switch(this.props.type) {\r\n            case('bread-bottom'):\r\n            ingredient = <div className={classes.BreadBottom}></div>;\r\n            break;\r\n            case('bread-top'):\r\n            ingredient = (\r\n                <div className={classes.BreadTop}>\r\n                    <div className={classes.Seeds1}></div>\r\n                    <div className={classes.Seeds2}></div>\r\n                </div>\r\n            );\r\n            break;\r\n            case('meat'):\r\n            ingredient = <div className={classes.Meat}></div>;\r\n            break;\r\n            case('cheese'):\r\n            ingredient = <div className={classes.Cheese}></div>;\r\n            break;\r\n            case('bacon'):\r\n            ingredient = <div className={classes.Bacon}></div>;\r\n            break;\r\n            case('salad'):\r\n            ingredient = <div className={classes.Salad}></div>;\r\n            break;\r\n          \r\n            default:\r\n                ingredient = null;\r\n        }\r\n    \r\n        return ingredient;\r\n    }\r\n    \r\n};\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: propTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredient;","import React from 'react'\r\nimport classes from './Burger.module.css'\r\nimport BurgerIngredient from './BurgerIngredients/BurgerIngredient'\r\n\r\n\r\nconst burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients).map(ingredientKey => {\r\n        return [...Array(props.ingredients[ingredientKey])].map((_, i) => {\r\n            return <BurgerIngredient key={ingredientKey + i} type={ingredientKey}/>;\r\n        });\r\n    }).reduce((arr, el) => {\r\n        return arr.concat(el)\r\n    },[])\r\n        if(transformedIngredients.length === 0){\r\n            transformedIngredients = <p>Please start adding ingredients</p>\r\n        }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type='bread-top'/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type='bread-bottom'/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","import React from 'react'\r\nimport classes from './BuildControl.module.css'\r\n\r\nconst buildControl = (props) => (\r\n    <div  className={classes.BuildControl}>\r\n        <div className={classes.Label}>\r\n            {props.label}\r\n        </div>\r\n        <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Less</button>\r\n        <button className={classes.More} onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from \"react\";\r\nimport classes from \"./BuildControls.module.css\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\n\r\nconst controls = [\r\n  { label: \"Salad\", type: \"salad\" },\r\n  { label: \"Bacon\", type: \"bacon\" },\r\n  { label: \"Cheese\", type: \"cheese\" },\r\n  { label: \"Meat\", type: \"meat\" },\r\n];\r\n\r\nconst buildControls = (props) => (\r\n  <div className={classes.BuildControls}>\r\n    <p>\r\n      Current price: <strong>$ {props.price.toFixed(2)}</strong>\r\n    </p>\r\n    {controls.map((ctrl) => (\r\n      <BuildControl\r\n        key={ctrl.label}\r\n        label={ctrl.label}\r\n        added={() => props.ingredientAdded(ctrl.type)}\r\n        removed={() => props.ingredientRemoved(ctrl.type)}\r\n        disabled={props.disabled[ctrl.type]}\r\n      />\r\n    ))}\r\n    <button\r\n      className={classes.OrderButton}\r\n      disabled={!props.purchasable}\r\n      onClick={props.ordered}\r\n    >\r\n      {props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default buildControls;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./Modal.module.css\";\r\nimport Aux from \"../../../hoc/Auxx/Auxiliary\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\n\r\nclass Modal extends Component {\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n        <div\r\n          className={classes.Modal}\r\n          style={{\r\n            transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n            opacity: this.props.show ? \"1\" : \"0\",\r\n          }}\r\n        >\r\n          {this.props.children}\r\n        </div>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport classes from './Button.module.css'\r\n\r\nconst button = (props) => (\r\n  <button className={[classes.Button, classes[props.btnType]].join(' ')}\r\n  onClick={props.clicked}\r\n  disabled={props.disabled}>{props.children}</button>\r\n);\r\n\r\nexport default button;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../../hoc/Auxx/Auxiliary\";\r\nimport Button from '../../UI/Button/Button'\r\n\r\nclass OrderSummary extends Component {\r\n  render(){\r\n    const ingredientSummary = Object.keys(this.props.ingredients).map((igKey) => {\r\n      return (\r\n        <li key={igKey}>\r\n          <span style={{ textTransform: \"capitalize\" }}>{igKey}</span>:{\" \"}\r\n          {this.props.ingredients[igKey]}\r\n        </li>\r\n      );\r\n    });\r\n  \r\n    return (\r\n      <Aux>\r\n        <h3>Your Order</h3>\r\n        <p>A delicious burger with the following ingredients:</p>\r\n        <ul>\r\n            {ingredientSummary}\r\n        </ul>\r\n    <p><strong>Total Price: $ {this.props.price.toFixed(2)}</strong></p>\r\n        <p>Continue to Checkout?</p>\r\n        <Button btnType='Danger' clicked={this.props.purchaseCancelled}>CANCEL</Button>\r\n        <Button btnType='Success' clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n      </Aux>\r\n    );\r\n  }\r\n \r\n};\r\n\r\nexport default OrderSummary;\r\n","import React from 'react';\r\nimport classes from './Spinner.module.css'\r\n\r\nconst spinner = (props) => {\r\n    return(\r\n        <div className={classes.Loader}>Loading...</div>\r\n    );\r\n};\r\n\r\nexport default spinner;","import React, { Component } from \"react\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport Aux from \"../Auxx/Auxiliary\";\r\nconst withErrorHandler = (WrappedComponenet, axios) => {\r\n  return class extends Component {\r\n    state = {\r\n      error: null,\r\n    };\r\n\r\n\r\n\r\n    componentWillMount() {\r\n      this.reqInterceptor = axios.interceptors.request.use((req) => {\r\n        this.setState({ error: null });\r\n        return req;\r\n      });\r\n      this.resInterceptor = axios.interceptors.response.use(res => res, (error) => {\r\n        this.setState({ error: error });\r\n      });\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        axios.interceptors.request.eject(this.reqInterceptor);\r\n        axios.interceptors.request.eject(this.resInterceptor);\r\n    }\r\n\r\n    errorConfirmedHandler = () => {\r\n      this.setState({ error: null });\r\n    };\r\n    render() {\r\n      return (\r\n        <Aux>\r\n          <Modal show={this.state.error} modalClosed={this.errorConfirmedHandler}>\r\n            {this.state.error ? this.state.error.message : null}\r\n          </Modal>\r\n          <WrappedComponenet {...this.props} />\r\n        </Aux>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default withErrorHandler;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-my-burger-13f58.firebaseio.com/'\r\n})\r\n\r\n\r\n\r\nexport default instance;","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    idToken: token,\r\n    userId: userId,\r\n  };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('expirationDate')\r\n    localStorage.removeItem('userId')\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n    let url =\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAVU2rqKXflbflGvGQ4NgHZEFb9gQqNjUw\";\r\n    if (!isSignup) {\r\n      url =\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAVU2rqKXflbflGvGQ4NgHZEFb9gQqNjUw\";\r\n    }\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(authFail(err.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n  return {\r\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n    payload: path,\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token) {\r\n            dispatch(logout())\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n            if(expirationDate <= new Date()){\r\n                dispatch(logout())\r\n            } else {\r\n                const userId = localStorage.getItem('userId')\r\n                dispatch(authSuccess(token, userId))\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/1000))\r\n            }\r\n        }\r\n    }\r\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT'\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT'\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS'\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED'\r\n\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS'\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL'\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START'\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT'\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START'\r\nexport const FETCH_ORDERS_SUCCES = 'FETCH_ORDERS_SUCCES'\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL'\r\n\r\nexport const AUTH_START = 'AUTH_START'\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_FAIL = 'AUTH_FAIL'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH'","import React, { Component } from \"react\";\r\nimport Aux from \"../../hoc/Auxx/Auxiliary\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport class BurgerBuilder extends Component {\r\n  state = {\r\n    purchasing: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onInitIngredients();\r\n  }\r\n\r\n  updatePurchaseState(ingredients) {\r\n    const sum = Object.keys(ingredients)\r\n      .map((igKey) => {\r\n        return ingredients[igKey];\r\n      })\r\n      .reduce((sum, el) => {\r\n        return sum + el;\r\n      }, 0);\r\n\r\n    return sum > 0;\r\n  }\r\n\r\n  purchaseHandler = () => {\r\n    if(this.props.isAuthenticated) {\r\n      this.setState({purchasing: true});\r\n    } else {\r\n      this.props.onSetAuthRedirectPath(\"/checkout\")\r\n      this.props.history.push('/auth');\r\n    }\r\n    this.setState({ purchasing: true });\r\n  };\r\n\r\n  purchaseCancelHandler = () => {\r\n    this.setState({ purchasing: false });\r\n  };\r\n\r\n  purchaseContinueHandler = () => {\r\n    this.props.onInitPurchase();\r\n    this.props.history.push(\"/checkout\");\r\n  };\r\n  render() {\r\n    const disableInfo = {\r\n      ...this.props.ings,\r\n    };\r\n\r\n    for (let key in disableInfo) {\r\n      disableInfo[key] = disableInfo[key] <= 0;\r\n    }\r\n    let orderSummary = null;\r\n\r\n    if (this.state.loading) {\r\n      orderSummary = <Spinner />;\r\n    }\r\n\r\n    let burger = this.props.error ? (\r\n      <p>Ingredients can't be loaded!</p>\r\n    ) : (\r\n      <Spinner />\r\n    );\r\n\r\n    if (this.props.ings) {\r\n      burger = (\r\n        <Aux>\r\n          <Burger ingredients={this.props.ings} />\r\n          <BuildControls\r\n            ingredientAdded={(type) => this.props.onIngAdded(type)}\r\n            ingredientRemoved={(type) => this.props.onIngRemoved(type)}\r\n            disabled={disableInfo}\r\n            price={this.props.price}\r\n            purchasable={this.updatePurchaseState(this.props.ings)}\r\n            ordered={this.purchaseHandler}\r\n            isAuth={this.props.isAuthenticated}\r\n          />\r\n        </Aux>\r\n      );\r\n      orderSummary = (\r\n        <OrderSummary\r\n          ingredients={this.props.ings}\r\n          purchaseCancelled={this.purchaseCancelHandler}\r\n          purchaseContinued={this.purchaseContinueHandler}\r\n          price={this.props.price}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Aux>\r\n        <Modal\r\n          show={this.state.purchasing}\r\n          modalClosed={this.purchaseCancelHandler}\r\n        >\r\n          {orderSummary}\r\n        </Modal>\r\n        {burger}\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    price: state.burgerBuilder.totalPrice,\r\n    error: state.burgerBuilder.error,\r\n    isAuthenticated: state.auth.token !== null\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onIngAdded: (ingName) =>\r\n      dispatch(actions.addIngredient(ingName)),\r\n    onIngRemoved: (ingName) =>\r\n      dispatch(actions.removeIngredient(ingName)),\r\n    onInitIngredients: () => dispatch(actions.initIngredients()),\r\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n    onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(BurgerBuilder, axios));\r\n"," import * as actionTypes from './actionTypes';  \r\n import axios from \"../../axios-orders\";\r\n\r\n export const addIngredient = (name) => {\r\n     return {\r\n         type: actionTypes.ADD_INGREDIENT,\r\n         ingredientName: name\r\n     }\r\n }\r\n export const removeIngredient = (name) => {\r\n     return {\r\n         type: actionTypes.REMOVE_INGREDIENT,\r\n         ingredientName: name\r\n     }\r\n }\r\n\r\n export const setIngredients = ingredients => {\r\n     return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n     }\r\n }\r\n\r\n export const fetchIngredientsFailed = () => {\r\n     return {\r\n         type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n     }\r\n }\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios\r\n        .get(\"https://react-my-burger-13f58.firebaseio.com/ingredients.json\")\r\n        .then((response) => {\r\n            dispatch(setIngredients(response.data))\r\n        })\r\n        .catch((error) => {\r\n          dispatch(fetchIngredientsFailed());\r\n        });\r\n    }\r\n}","import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios-orders'\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return{\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    }\r\n}\r\nexport const purchaseBurgerFail = (error) => {\r\n    return{\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post( axios\r\n            .post(\"/orders.json?auth=\" + token, orderData)\r\n            .then((response) => {\r\n              dispatch(purchaseBurgerSuccess(response.data.name, orderData))\r\n            })\r\n            .catch((error) => {\r\n              dispatch(purchaseBurgerFail(error));\r\n            }))\r\n    }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\nexport const fetchOrdersSucces = (orders) => {\r\n    return{\r\n        type: actionTypes.FETCH_ORDERS_SUCCES,\r\n        orders: orders\r\n    }\r\n}\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchOrderStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n   return (dispatch) => {\r\n       dispatch(fetchOrderStart());\r\n       const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"'\r\n    axios\r\n    .get(\"/orders.json\" + queryParams)\r\n    .then((res) => {\r\n      const fetchedOrders = [];\r\n      for (let key in res.data) {\r\n        fetchedOrders.push({\r\n          ...res.data[key],\r\n          id: key,\r\n        });\r\n      }\r\n      dispatch(fetchOrdersSucces(fetchedOrders))\r\n    })\r\n    .catch((err) => {\r\n      dispatch(fetchOrdersFail(err))\r\n    });\r\n   }\r\n}","import React from \"react\";\r\nimport Burger from \"../../Burger/Burger\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport classes from './CheckoutSummary.module.css'\r\n\r\nconst checkoutSummary = (props) => {\r\n  return (\r\n    <div className={classes.CheckoutSummary}>\r\n      <h1>We hope it tastes well!</h1>\r\n      <div style={{ width: \"100%\",  margin: \"auto\" }}>\r\n        <Burger ingredients={props.ingredients} />\r\n      </div>\r\n      <Button btnType=\"Danger\" clicked={props.checkoutCanceled}>CANCEL</Button>\r\n      <Button btnType=\"Success\" clicked={props.checkoutContinued}>CONTINUE</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default checkoutSummary;\r\n","import React from \"react\";\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst input = (props) => {\r\n  let inputElement = null;\r\n  const inputClasses = [classes.InputElement];\r\n\r\n  if(props.invalid && props.shouldValidate && props.touched){\r\n    inputClasses.push(classes.Invalid);\r\n  }\r\n\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(' ')}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(' ')}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(' ')}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.displayValue}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(' ')}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label}>{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default input;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport classes from \"./ContactData.module.css\";\r\nimport axios from \"../../../axios-orders\";\r\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\r\nimport Input from \"../../../components/UI/Input/Input\";\r\nimport {connect} from 'react-redux'\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actions from '../../../store/actions/index'\r\n\r\n\r\nclass ContactData extends Component {\r\n  state = {\r\n    orderFrom: {\r\n      name: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Your Name\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      street: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Street\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      zipcode: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"ZIP Code\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 5,\r\n          maxLength: 5\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      country: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Country\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Your E-Mail\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      deliveryMethod: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            { value: \"fastest\", displayValue: \"Fastest\" },\r\n            { value: \"cheapest\", displayValue: \"Cheapest\" },\r\n          ],\r\n        },\r\n        value: \"fastest\",\r\n        validation: {},\r\n        valid: true\r\n      },\r\n    },\r\n    name: \"\",\r\n    email: \"\",\r\n    address: {\r\n      street: \"\",\r\n      postalCode: \"\",\r\n    },\r\n    formIsValid: false,\r\n  };\r\n\r\n  orderHandler = (event) => {\r\n    event.preventDefault();\r\n    const formData = {};\r\n    for (let formElementIdentifier in this.state.orderFrom) {\r\n      formData[formElementIdentifier] = this.state.orderFrom[\r\n        formElementIdentifier\r\n      ].value;\r\n    }\r\n\r\n    const order = {\r\n      ingredients: this.props.ings,\r\n      price: this.props.price,\r\n      orderData: formData,\r\n      userId: this.props.userId\r\n    };\r\n\r\n    this.props.onOrderBurger(order, this.props.token);\r\n   \r\n  };\r\n\r\n  inputChangedHandler = (event, inputIdentifier) => {\r\n    const updatedOrderForm = { ...this.state.orderFrom };\r\n    const updatedFormElement = { ...updatedOrderForm[inputIdentifier] };\r\n    updatedFormElement.value = event.target.value;\r\n    updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n    updatedFormElement.touched = true;\r\n    updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n    \r\n    \r\n\r\n    let formIsValid = true;\r\n    for(let inputIdentifier in updatedOrderForm) {\r\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid\r\n    }\r\n\r\n    this.setState({ orderFrom: updatedOrderForm, formIsValid: formIsValid });\r\n  };\r\n\r\n  checkValidity(value, rules) {\r\n    let isValid = true;\r\n    if (rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n     \r\n    if(rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n\r\n    if(rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n\r\n\r\n    return isValid;\r\n  }\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.orderFrom) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.orderFrom[key],\r\n      });\r\n    }\r\n\r\n    let form = (\r\n      <form onSubmit={this.orderHandler}>\r\n        {formElementsArray.map((formElement) => (\r\n          <Input\r\n            key={formElement.id}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n          />\r\n        ))}\r\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n      </form>\r\n    );\r\n    if (this.props.loading) {\r\n      form = <Spinner />;\r\n    }\r\n    return (\r\n      <div className={classes.ContactData}>\r\n        <h4>Enter your contact data</h4>\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return{\r\n    ings: state.burgerBuilder.ingredients,\r\n    price: state.burgerBuilder.totalPrice,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return{\r\n    onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));\r\n","import CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\r\nimport React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport ContactData from \"./ContactData/ContactData\";\r\nimport {connect} from 'react-redux'\r\n\r\nclass Checkout extends Component {\r\n\r\n  checkoutCanceledHandler = () => {\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  checkoutContinuedHandler = () => {\r\n    this.props.history.replace(\"/checkout/contact-data\");\r\n  };\r\n\r\n  render() {\r\n    let summary = <Redirect to=\"/\"/>\r\n    \r\n    if(this.props.ings){\r\n      const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\"/> : null;\r\n      summary = (\r\n      <div>\r\n        {purchasedRedirect}\r\n      <CheckoutSummary\r\n        ingredients={this.props.ings}\r\n        checkoutCanceled={this.checkoutCanceledHandler}\r\n        checkoutContinued={this.checkoutContinuedHandler}\r\n      />\r\n      <Route\r\n          path={this.props.match.path + \"/contact-data\"}\r\n          component={ContactData}\r\n        />\r\n      </div>\r\n        )\r\n    }\r\n    return summary;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return{\r\n      ings: state.burgerBuilder.ingredients,\r\n      purchased: state.order.purchased\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n","import React from \"react\";\r\nimport classes from \"./Order.module.css\";\r\n\r\nconst order = (props) => {\r\n  const ingredients = [];\r\n\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredientName,\r\n      amount: props.ingredients[ingredientName],\r\n    });\r\n  }\r\n\r\n  const ingredientOutput = ingredients.map((ig) => {\r\n    return (\r\n      <span\r\n        style={{\r\n          textTransform: \"capitalize\",\r\n          display: \"inline-block\",\r\n          margin: \"0 8px\",\r\n          border: \"1px solid #ccc\",\r\n          padding: \"5px\",\r\n        }}\r\n        key={ig.name}\r\n      >\r\n        {ig.name} ({ig.amount})\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={classes.Order}>\r\n      <p>Ingredients: {ingredientOutput}</p>\r\n      <p>\r\n        Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default order;\r\n","import React, { Component } from \"react\";\r\nimport Order from \"../../components/Order/Order\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from '../../store/actions/index'\r\nimport {connect} from 'react-redux'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nclass Orders extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.onFetchOrders(this.props.token, this.props.userId)\r\n  }\r\n  render() {\r\n\r\n    let orders = <Spinner/>\r\n    if(!this.props.loading) {\r\n      orders =\r\n        this.props.orders.map((order) => (\r\n          <Order key={order.id} ingredients={order.ingredients} price={order.price}/>\r\n        ))\r\n    }\r\n    return (\r\n      <div>\r\n        {orders}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDisaptchToProps = dispatch => {\r\n  return {\r\n    onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDisaptchToProps)(withErrorHandler(Orders, axios));\r\n","import React, { Component } from \"react\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport classes from \"./Auth.module.css\";\r\nimport * as actions from '../../store/actions/index'\r\nimport {connect } from 'react-redux'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    controls: {\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Mail Address\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      password: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"password\",\r\n          placeholder: \"Password\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 6,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n    },\r\n\r\n    isSignup: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    if(!this.props.buildingBurger && this.props.authRedirectPath !== \"/\"){\r\n      this.props.onSetAuthRedirectPath()\r\n    }\r\n  }\r\n\r\n  checkValidity(value, rules) {\r\n    let isValid = true;\r\n    if (rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n      const pattern = /\\S+@\\S+\\.\\S+/;\r\n      isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  switchAuthModeHandler = () => {\r\n    this.setState(prevState => {\r\n      return {isSignup: !prevState.isSignup}\r\n    })\r\n  }\r\n\r\n  inputChangedHandler = (event, controlName) => {\r\n      const updatedControls = {\r\n          ...this.state.controls,\r\n          [controlName]: {\r\n              ...this.state.controls[controlName],\r\n              value: event.target.value,\r\n              valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n              touched: true\r\n          }\r\n      }\r\n      this.setState({controls:updatedControls})\r\n  }\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup)\r\n  }\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.controls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.controls[key],\r\n      });\r\n    }\r\n\r\n    let form = formElementsArray.map((formElement) => (\r\n      <Input\r\n        key={formElement.id}\r\n        elementType={formElement.config.elementType}\r\n        elementConfig={formElement.config.elementConfig}\r\n        value={formElement.config.value}\r\n        invalid={!formElement.config.valid}\r\n        shouldValidate={formElement.config.validation}\r\n        touched={formElement.config.touched}\r\n        changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n      />\r\n    ));\r\n\r\n    if(this.props.loading){\r\n      form = <Spinner/>\r\n    }\r\n\r\n    let errorMessage = null;\r\n\r\n    if(this.props.error){\r\n      errorMessage = (\r\n        <p>{this.props.error.message}</p>\r\n      )\r\n    }\r\n\r\n    let authRedirect = null\r\n\r\n    if(this.props.isAuthenticated){\r\n      authRedirect = <Redirect to={this.props.authRedirectPath}/>\r\n    }\r\n\r\n    return (\r\n      <div className={classes.Auth}>\r\n        {authRedirect}\r\n        {errorMessage}\r\n        <form onSubmit={this.submitHandler}>\r\n          {form}\r\n          <Button btnType=\"Success\">SUBMIT</Button>\r\n        </form>\r\n        <Button \r\n        clicked={this.switchAuthModeHandler}\r\n        btnType=\"Danger\">SWITCH TO {this.state.isSignup ? 'SIGNIN' : 'SIGNUP'}</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return{\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    isAuthenticated: state.auth.token !== null,\r\n    buildingBurger: state.burgerBuilder.building,\r\n    authRedirectPath: state.auth.authRedirectPath\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return{\r\n    onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\r\n    onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath(\"/\"))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","import React, {Component} from 'react';\r\nimport * as actions from '../../../store/actions/index'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nclass Logout extends Component {\r\n    componentDidMount () {\r\n        this.props.onLogout()\r\n    }\r\n    render () {\r\n        return (\r\n            <Redirect to=\"/\"/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onLogout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Logout);","import React, { Component } from \"react\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport Checkout from \"./containers/Checkout/Checkout\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Orders from \"./containers/Orders/Orders\";\nimport Auth from \"./containers/Auth/Auth\";\nimport Logout from \"./containers/Auth/Logout/Logout\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./store/actions/index\";\nimport Auxiliary from \"./hoc/Auxx/Auxiliary\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  state = {\n    show: true,\n  };\n\n  render() {\n    let routes = (\n      <Auxiliary>\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\"/>\n      </Auxiliary>\n    );\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Auxiliary>\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/logout\" component={Logout} />\n          <Redirect to=\"/\"/>\n        </Auxiliary>\n      );\n    }\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../../shared/utility\";\r\n\r\n\r\nconst initialState = {\r\n  ingredients: null,\r\n  totalPrice: 4,\r\n  error: false,\r\n  building: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.3,\r\n  cheese: 0.5,\r\n  meat: 1.5,\r\n  bacon: 1,\r\n};\r\n\r\nconst addIngredient = (state,action) => {\r\n  const updatedIngredient = {[action.ingredientName]: state.ingredients[action.ingredientName] + 1}\r\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient)\r\n  const updatedState = {\r\n    ingredients: updatedIngredients,\r\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n    building: true\r\n  }\r\n  return updateObject(state, updatedState)\r\n}\r\n\r\nconst removeIngredient = (state, action) => {\r\n  const updatedIng = {[action.ingredientName]: state.ingredients[action.ingredientName] - 1}\r\n      const updatedIngs = updateObject(state.ingredients, updatedIng)\r\n      const updatedSt = {\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n      }\r\n      return updateObject(state, updatedSt);\r\n}\r\nconst setIngredients = (state, action) => {\r\n  return updateObject(state, {\r\n    ingredients: {\r\n      salad: action.ingredients.salad,\r\n      bacon: action.ingredients.bacon,\r\n      cheese: action.ingredients.cheese,\r\n      meat: action.ingredients.meat,\r\n    },\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false\r\n  })\r\n}\r\nconst fetchIngredients = (state, action) => {\r\n  return updateObject(state, {\r\n    error:true\r\n  })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_INGREDIENT:\r\n      return addIngredient(state, action)\r\n    case actionTypes.REMOVE_INGREDIENT:\r\n      return removeIngredient(state,action)\r\n    case actionTypes.SET_INGREDIENTS:\r\n      return setIngredients(state, action)\r\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n      return fetchIngredients(state, action)\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from \"../../shared/utility\";\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}\r\n\r\nconst purchaseInit = (state, action) => {\r\n    return updateObject(state, {purchased: false})\r\n}\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state, {loading: true})\r\n}\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    const newOrder = updateObject(action.orderData, {\r\n        id: action.orderId\r\n    })\r\n    return updateObject(state, {\r\n        purchased: true,\r\n        loading: false,\r\n        orders: state.orders.concat(newOrder)\r\n    })\r\n}\r\n\r\nconst purchaseBurgerFail = ( state, action) => {\r\n    return updateObject(state,{\r\n        loading: false\r\n    })\r\n}\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n    return updateObject(state,{\r\n        loading: true\r\n    })\r\n}\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        orders: action.orders,\r\n        loading: false\r\n    })\r\n}\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n    return updateObject(state, { \r\n        loading: false\r\n    })\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_INIT:\r\n            return purchaseInit(state, action)\r\n\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return purchaseBurgerStart(state, action)\r\n\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            return purchaseBurgerSuccess(state, action)\r\n\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n           return purchaseBurgerFail(state, action)\r\n\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return fetchOrdersStart(state, action)\r\n\r\n        case actionTypes.FETCH_ORDERS_SUCCES:\r\n            return fetchOrdersSuccess(state,action)\r\n\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return fetchOrdersFail(state, action)\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../../shared/utility\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n  authRedirectPath: \"/\"\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n  return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    token: action.idToken,\r\n    userId: action.userId,\r\n    error: null,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {token: null, userId: null})\r\n}\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n  return updateObject(state, {authRedirectPath: action.payload})\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return authStart(state, action);\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    case actionTypes.AUTH_LOGOUT:\r\n        return authLogout(state, action)\r\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n      return setAuthRedirectPath(state, action)\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from 'redux-thunk'\nimport orderReducer from './store/reducers/order'\nimport authReducer from './store/reducers/auth'\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__: null || compose \n\nconst rootReducer = combineReducers ({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n})\n\nconst store = createStore( rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(\n  <React.StrictMode>{app}</React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}